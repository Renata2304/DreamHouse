/* tslint:disable */
/* eslint-disable */
/**
 * Authorization server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Listing } from './Listing';
import {
    ListingFromJSON,
    ListingFromJSONTyped,
    ListingToJSON,
    ListingToJSONTyped,
} from './Listing';

/**
 * 
 * @export
 * @interface Review
 */
export interface Review {
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    id?: string;
    /**
     * 
     * @type {User}
     * @memberof Review
     */
    user?: User;
    /**
     * 
     * @type {Listing}
     * @memberof Review
     */
    listing?: Listing;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    comment?: string;
    /**
     * 
     * @type {Date}
     * @memberof Review
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the Review interface.
 */
export function instanceOfReview(value: object): value is Review {
    return true;
}

export function ReviewFromJSON(json: any): Review {
    return ReviewFromJSONTyped(json, false);
}

export function ReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Review {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'listing': json['listing'] == null ? undefined : ListingFromJSON(json['listing']),
        'rating': json['rating'] == null ? undefined : json['rating'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function ReviewToJSON(json: any): Review {
    return ReviewToJSONTyped(json, false);
}

export function ReviewToJSONTyped(value?: Review | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user': UserToJSON(value['user']),
        'listing': ListingToJSON(value['listing']),
        'rating': value['rating'],
        'comment': value['comment'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

