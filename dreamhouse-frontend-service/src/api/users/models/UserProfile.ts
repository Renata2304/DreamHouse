/* tslint:disable */
/* eslint-disable */
/**
 * Authorization server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    userId?: string;
    /**
     * 
     * @type {User}
     * @memberof UserProfile
     */
    user?: User;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    bio?: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    avatarUrl?: string;
}

/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): value is UserProfile {
    return true;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'bio': json['bio'] == null ? undefined : json['bio'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
    };
}

export function UserProfileToJSON(json: any): UserProfile {
    return UserProfileToJSONTyped(json, false);
}

export function UserProfileToJSONTyped(value?: UserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'user': UserToJSON(value['user']),
        'bio': value['bio'],
        'avatarUrl': value['avatarUrl'],
    };
}

